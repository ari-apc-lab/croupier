########
# Copyright (c) 2019 Atos Spain SA. All rights reserved.
#
# This file is part of Croupier.
#
# Croupier is free software: you can redistribute it and/or modify it
# under the terms of the Apache License, Version 2.0 (the License) License.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT ANY WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT, IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT
# OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# See README file for full disclaimer information and LICENSE file for full
# license information in the project root.
#
# @author: Javier Carnero
#          Atos Research & Innovation, Atos Spain S.A.
#          e-mail: javier.carnero@atos.net
# @author: Jesus Gorronogoitia
#          Atos Research & Innovation, Atos Spain S.A.
#          e-mail: jesus.gorronogoitia@atos.net
# @author: Jesus Ramos Rivas
#          Atos Research & Innovation, Atos Spain S.A.
#          e-mail: jesus.2.ramos@atos.net
#
# plugin.yaml

plugins:
    croupier:
        executor: central_deployment_agent
        # URL to archive containing the plugin or name of directory containing
        # the plugin if it is included in the blueprint directory under the
        # "plugins" directory.
        source: https://github.com/ari-apc-lab/croupier/archive/master.zip
        install_arguments: -r plugin-requirements.txt
        package_name: croupier
        package_version: "3.2.0"

data_types:

    croupier.datatypes.wm_config:
        properties:
            infrastructure_interface:
                description: Scheduler type.
                type: string
                required: true
            modules:
                description: 'Modules to load before using the scheduler'
                type: list
                required: false
            country_tz:
                description: Timezone
                type: string
                required: false
                default: 'GMT'
            reservation_deletion_path:
                description: Path where the executable to delete a reservation is located
                type: string
                required: false
                default: '/opt/cesga/sistemas/reservas/sresdelete'


    croupier.datatypes.monitoring_options:
        properties:
            monitor_interface:
                description: Interface scheduler used by monitoring. If not set, the default infrastructure scheduler is used
                type: string
                required: false
            monitor_period:
                description: How often to scrape the WM for metrics
                type: integer
                required: false
                default: 15
            hpc_label:
                description: HPC label to apply to the metrics to identify the HPC WM
                type: string
                required: false
            only_jobs:
                description: Set to true to not monitor the infrastructure metrics (queues/partitions)
                type: boolean
                required: false
                default: false

    croupier.datatypes.accounting_options:
        properties:
            reporting_user:
                type: string
                required: false

    croupier.datatypes.job_deployment_config:
        properties:
            inputs:
                default: []
                required: false
            bootstrap:
                default: ''
                required: false
                type: string
            revert:
                default: ''
                required: false
                type: string
            hpc_execution:
                default: true
                required: false
                type: boolean
                description: "if true, bootstrap|revert scripts are executed in target HPC, otherwise, locally in Croupier host"

    croupier.datatypes.dataset:
        properties:
            config:
                type: croupier.datatypes.dataset_config
                required: true
            dataset:
                type: croupier.datatypes.dataset_dataset
                required: true
            type:
                type: string
                required: true

    croupier.datatypes.dataset_config:
        properties:
            api_key:
              type: string

    croupier.datatypes.dataset_dataset:
        properties:
            name:
                type: string

    croupier.datatypes.ecmwf_query:
        properties:
            area:
                type: string
                required: true
            params:
                type: string
                required: true
            date:
                type: string
                required: false
                default: ""
            time:
                type: string
                required: false
                default: ""
            collection:
                type: string
                required: false
                default: ""
            members:
                type: string
                required: false
                default: ""
            ensemble:
                type: string
                required: false
                default: ""
            input:
                type: string
                required: false
                default: ""
            keep_input:
                type: string
                required: false
                default: ""
            algorithm:
                type: string
                required: false
                default: ""
            max_step:
                type: string
                required: false
                default: "1"

    croupier.datatypes.job.Options:
        properties:
            commands:
                description: 'List of commands to be included in job submission script. It is incompatible with script property'
                type: list
                required: false #Either commands or script must be present
            remote_script:
                description: 'Script, present in the HPC workdir, to be launched with job submission. It is incompatible with commands/local_script property'
                type: string
                required: false #Either commands or script must be present
            local_script:
                description: 'Script to be uploaded from the blueprint folder and launched with job submission. It is incompatible with commands/remote_script property'
                type: string
                required: false #Either commands or script must be present
            arguments:
                description: 'List of arguments to be sent to the remote_script or local_script'
                type: list
                required: false
            nodes:
                description: '(SLURM|TORQUE) Controls the minimum/maximum number of nodes allocated to the job'
                type: integer
                required: false
            tasks:
                description: '(SLURM) Controls the number of tasks to be created for the job'
                type: integer
                required: false
            tasks_per_node:
                description: '(SLURM) Controls the maximum number of tasks per allocated node. (TORQUE) Processors per node'
                type: integer
                required: false
            max_time:
                description: 'Walltime (TORQUE) or Maxtime (SLURM) for job'
                type: string
                required: false
            partition:
                description: '(SLURM) partition where to submit the job to'
                type: string
                required: false
            queue:
                description: '(TORQUE) partition where to submit the job to'
                type: string
                required: false
            scale:
                description: 'Specifies the task ids of a job array TORQUE (-t 0-XX), SLURM (--array=0-XX)'
                type: integer
                required: false
            memory:
                description: 'Maximum amount of physical memory used by the job TORQUE (-l mem=XX), SLURM (--mem=XX)'
                type: string
                required: false
            cpu_memory:
                description: 'Minimum  memory  required  per  allocated CPU. Default units are megabytes. Different  units  can  be  specified  using the suffix [K|M|G|T], SLURM (--mem-per-cpu=XX)'
                type: string
                required: false
            gpu_memory:
                description: 'Minimum  memory  required  per  allocated GPU. Default units are megabytes. Different  units  can  be  specified  using the suffix [K|M|G|T], SLURM (--mem-per-cpu=XX)'
                type: string
                required: false
            mail_user:
                description: 'Declares the list of users to whom mail is sent by the execution server when it sends mail about the job. TORQUE (-M XX), SLURM (--mail-user=XX)'
                type: string
                required: false
            mail_type:
                description: 'Defines the set of conditions under which the execution server will send a mail message about the job. TORQUE (-m XX), SLURM (--mail-type=XX)'
                type: string
                required: false
            account:
                description: 'Defines the account string associated with the job TORQUE (-A XX), SLURM (--A XX)'
                type: string
                required: false
            stderr_file:
                description: 'Defines the path to be used for the standard error stream of the batch job TORQUE|SLURM (-e XX)'
                type: string
                required: false
            stdout_file:
                description: 'Defines the path to be used for the standard output stream of the batch job TORQUE|SLURM (-o XX)'
                type: string
                required: false
            group_name:
                description: 'FIXME: Not used, but read by TORQUE'
                type: string
                required: false
            scale_max_in_parallel:
                description: ''
                type: integer
                required: false
            reservation:
                description: 'To launch a job in the context of a reservation SLURM (--reservation=XX)'
                type: string
                required: false
            qos:
                description: 'The quality of service associated with a job SLURM (--qos=XX)'
                type: string
                required: false

    croupier.datatypes.pycompssjob.Options:
        properties:
            modules:
                description: 'Modules to load before submitting the job'
                type: list
                required: false
            pre_script:
                description: 'List of script commands to be executed before pycompss submission'
                default: [ ]
                required: false
            app_name:
                description: Application name
                type: string
                required: true
            app_source:
                description: Path to the Application source
                type: string
                required: true
            env:
                description: 'List of environment variables as key:value'
                default: []
                required: false
            compss_args:
                description: 'enqueue_compss options'
                default: {}
                type: croupier.datatypes.pycompss_options
                required: false
            app_file:
                description: Application executable file path
                type: string
                required: true
            app_args:
                description: 'List of application arguments'
                default: []
                required: false

    croupier.datatypes.pycompss_options:
        properties:
            sc_cfg:
                description: 'SuperComputer configuration file to use. Must exist inside queues/cfgs/'
                type: string
                required: false
            exec_time:
                description: 'Expected execution time of the application (in minutes)'
                type: integer
                required: false
            job_name:
                description: 'Job name'
                type: string
                required: false
            queue:
                description: 'Queue name to submit the job. Depends on the queue system. For example (MN3): bsc_cs | bsc_debug | debug | interactive'
                type: string
                required: false
            reservation:
                description: 'Reservation to use when submitting the job'
                type: string
                required: false
            env_script:
                description: 'Script to source the required environment for the application.'
                type: string
                required: false
            extra_submit_flag:
                description: 'Flag to pass queue system flags not supported by default command flags. Spaces must be added as '#''
                type: string
                required: false
            cpus_per_task:
                description: 'Number of cpus per task the queue system must allocate per task. Note that this will be equal to the cpus_per_node in a worker node and equal to the worker_in_master_cpus in a master node respectively.'
                type: integer
                required: false
            job_dependency:
                description: 'Postpone job execution until the job dependency has ended'
                type: string
                required: false
            forward_time_limit:
                description: 'Forward the queue system time limit to the runtime. It will stop the application in a controlled way.'
                type: boolean
                required: false
            storage_home:
                description: 'Root installation dir of the storage implementation'
                type: string
                required: false
            storage_props:
                description: 'Absolute path of the storage properties file. Mandatory if storage_home is defined'
                type: string
                required: false
            agents:
                description: 'Hierarchy of agents for the deployment. Accepted values: plain|tree'
                type: string
                required: false
            num_nodes:
                description: 'Number of nodes to use'
                type: integer
                required: false
            num_switches:
                description: 'Maximum number of different switches. Select 0 for no restrictions. Maximum nodes per switch: 18. Only available for at least 4 nodes.'
                type: integer
                required: false
            type_cfg:
                description: 'Location of the file with the descriptions of node type requests'
                type: string
                required: false
            master:
                description: 'Node type for the master (Node type descriptions are provided in the --type_cfg flag)'
                type: string
                required: false
            workers:
                description: 'Node type and number of nodes per type for the workers (Node type descriptions are provided in the --type_cfg flag)'
                type: string
                required: false
            cpus_per_node:
                description: 'Available CPU computing units on each node'
                type: integer
                required: false
            gpus_per_node:
                description: 'Available GPU computing units on each node'
                type: integer
                required: false
            fpgas_per_node:
                description: 'Available FPGA computing units on each node'
                type: integer
                required: false
            io_executors:
                description: 'Number of IO executors on each node'
                type: integer
                required: false
            fpga_reprogram:
                description: 'Specify the full command that needs to be executed to reprogram the FPGA with the desired bitstream. The location must be an absolute path.'
                type: string
                required: false
            max_tasks_per_node:
                description: 'Maximum number of simultaneous tasks running on a node'
                type: integer
                required: false
            node_memory:
                description: 'Maximum node memory: disabled | <int> (MB)'
                type: integer
                required: false
            node_storage_bandwidth:
                description: 'Maximum node storage bandwidth: <int> (MB)'
                type: integer
                required: false
            network:
                description: 'Communication network for transfers: default | ethernet | infiniband | data.'
                type: string
                required: false
            prolog:
                description: 'Task to execute before launching COMPSs (Notice the quotes). If the task has arguments split them by "," rather than spaces. This argument can appear multiple times for more than one prolog action'
                type: string
                required: false
            epilog:
                description: 'Task to execute after executing the COMPSs application (Notice the quotes). If the task has arguments split them by "," rather than spaces. This argument can appear multiple times for more than one epilog action'
                type: string
                required: false
            master_working_dir:
                description: 'Working directory of the application'
                type: string
                required: false
            worker_working_dir:
                description: 'Worker directory. Use: local_disk | shared_disk | <path>'
                type: string
                required: false
            worker_in_master_cpus:
                description: 'Maximum number of CPU computing units that the master node can run as worker. Cannot exceed cpus_per_node.'
                type: integer
                required: false
            worker_in_master_memory:
                description: 'Maximum memory in master node assigned to the worker. Cannot exceed the node_memory. Mandatory if worker_in_master_cpus is specified.'
                type: integer
                required: false
            worker_port_range:
                description: 'Port range used by the NIO adaptor at the worker side'
                type: string
                required: false
            jvm_worker_in_master_opts:
                description: 'Extra options for the JVM of the COMPSs Worker in the Master Node. Each option separed by "," and without blank spaces (Notice the quotes)'
                type: string
                required: false
            container_image:
                description: 'Runs the application by means of a container engine image'
                type: string
                required: false
            container_compss_path:
                description: 'Path where compss is installed in the container image'
                type: string
                required: false
            container_opts:
                description: 'Options to pass to the container engine'
                type: string
                required: false
            elasticity:
                description: 'Activate elasticity specifiying the maximum extra nodes (ONLY AVAILABLE FORM SLURM CLUSTERS WITH NIO ADAPTOR)'
                type: integer
                required: false
            automatic_scaling:
                description: 'Enable or disable the runtime automatic scaling (for elasticity)'
                type: boolean
                required: false
            jupyter_notebook:
                description: 'Swap the COMPSs master initialization with jupyter notebook from the specified path.'
                type: string
                required: false
            ipython:
                description: 'Swap the COMPSs master initialization with ipython.'
                type: string
                required: false
            graph:
                description: 'Generation of the complete graph (true/false)'
                type: boolean
                required: false
            tracing:
                description: 'Set generation of traces and/or tracing level ( [ true | basic ] | advanced | scorep | arm-map | arm-ddt | false). True and basic levels will produce the same traces. When no value is provided it is set to 1'
                type: string
                required: false
            monitoring:
                description: 'Period between monitoring samples (milliseconds)'
                type: integer
                required: false
            external_debugger:
                description: 'Enables external debugger connection on the specified port (or 9999 if empty)'
                type: boolean
                required: false
            jmx_port:
                description: 'Enable JVM profiling on specified port'
                type: integer
                required: false
            task_execution:
                description: 'Task execution under COMPSs or Storage.'
                type: string
                required: false
            storage_impl:
                description: 'Path to an storage implementation. Shortcut to setting pypath and classpath. See Runtime/storage in your installation folder.'
                type: string
                required: false
            storage_conf:
                description: 'Path to the storage configuration file'
                type: string
                required: false
            project:
                description: 'Path to the project XML file'
                type: string
                required: false
            project_name:
                description: 'Project name associated to PyCOMPSs installation in local HPC'
                type: string
                required: false
            resources:
                description: 'Path to the resources XML file'
                type: string
                required: false
            lang:
                description: 'Language of the application (java/c/python)'
                type: string
                required: false
            summary:
                description: 'Displays a task execution summary at the end of the application execution'
                type: boolean
                required: false
            log_level:
                description: 'Set the debug level: off | info | api | debug | trace'
                type: string
                required: false
            extrae_config_file:
                description: 'Sets a custom extrae config file. Must be in a shared disk between all COMPSs workers.'
                type: string
                required: false
            extrae_config_file_python:
                description: 'Sets a custom extrae config file for python. Must be in a shared disk between all COMPSs workers.'
                type: string
                required: false
            trace_label:
                description: 'Add a label in the generated trace file. Only used in the case of tracing is activated.'
                type: string
                required: false
            tracing_task_dependencies:
                description: 'Adds communication lines for the task dependencies ( [ true | false ] )'
                type: boolean
                required: false
            comm:
                description: 'Class that implements the adaptor for communications'
                type: string
                required: false
            conn:
                description: 'Class that implements the runtime connector for the cloud'
                type: string
                required: false
            streaming:
                description: 'Enable the streaming mode for the given type. Supported types: FILES, OBJECTS, PSCOS, ALL, NONE'
                type: string
                required: false
            streaming_master_name:
                description: 'Use an specific streaming master node name.'
                type: string
                required: false
            streaming_master_port:
                description: 'Use an specific port for the streaming master.'
                type: integer
                required: false
            scheduler:
                description: 'Class that implements the Scheduler for COMPSs'
                type: string
                required: false
            scheduler_config_file:
                description: 'Path to the file which contains the scheduler configuration.'
                type: string
                required: false
            library_path:
                description: 'Non-standard directories to search for libraries (e.g. Java JVM library, Python library, C binding library)'
                type: string
                required: false
            classpath:
                description: 'Path for the application classes / modules'
                type: string
                required: false
            appdir:
                description: 'Path for the application class folder.'
                type: string
                required: false
            pythonpath:
                description: 'Additional folders or paths to add to the PYTHONPATH'
                type: string
                required: false
            base_log_dir:
                description: 'Base directory to store COMPSs log files (a .COMPSs/ folder will be created inside this location)'
                type: string
                required: false
            specific_log_dir:
                description: 'Use a specific directory to store COMPSs log files (no sandbox is created). Warning: Overwrites --base_log_dir option'
                type: string
                required: false
            uuid:
                description: 'Preset an application UUID'
                type: integer
                required: false
            master_name:
                description: 'Hostname of the node to run the COMPSs master'
                type: string
                required: false
            master_port:
                description: 'Port to run the COMPSs master communications. Only for NIO adaptor'
                type: integer
                required: false
            jvm_master_opts:
                description: 'Extra options for the COMPSs Master JVM. Each option separed by "," and without blank spaces (Notice the quotes)'
                type: string
                required: false
            jvm_workers_opts:
                description: 'Extra options for the COMPSs Workers JVMs. Each option separed by "," and without blank spaces (Notice the quotes)'
                type: string
                required: false
            cpu_affinity:
                description: 'Sets the CPU affinity for the workers'
                type: string
                required: false
            gpu_affinity:
                description: 'Sets the GPU affinity for the workers'
                type: string
                required: false
            fpga_affinity:
                description: 'Sets the FPGA affinity for the workers'
                type: string
                required: false
            task_count:
                description: 'Only for C/Python Bindings. Maximum number of different functions/methods, invoked from the application, that have been selected as tasks'
                type: string
                required: false
            input_profile:
                description: 'Path to the file which stores the input application profile'
                type: string
                required: false
            output_profile:
                description: 'Path to the file to store the application profile at the end of the execution'
                type: string
                required: false
            PyObject_serialize:
                description: 'Only for Python Binding. Enable the object serialization to string when possible (true/false).'
                type: boolean
                required: false
            persistent_worker_c:
                description: 'Only for C Binding. Enable the persistent worker in c (true/false).'
                type: boolean
                required: false
            enable_external_adaptation:
                description: 'Enable external adaptation. This option will disable the Resource Optimizer.'
                type: boolean
                required: false
            gen_coredump:
                description: 'Enable master coredump generation'
                type: boolean
                required: false
            keep_workingdir:
                description: 'Do not remove the worker working directory after the execution'
                type: boolean
                required: false
            python_interpreter:
                description: 'Python interpreter to use (python/python2/python3).'
                type: string
                required: false
            python_propagate_virtual_environment:
                description: 'Propagate the master virtual environment to the workers (true/false).'
                type: boolean
                required: false
            python_mpi_worker:
                description: 'Use MPI to run the python worker instead of multiprocessing. (true/false).'
                type: boolean
                required: false
            python_memory_profile:
                description: 'Generate a memory profile of the master.'
                type: boolean
                required: false
            python_worker_cache:
                description: 'Python worker cache (true/size/false). Only for NIO without mpi worker and python >= 3.8.'
                type: string
                required: false
            wall_clock_limit:
                description: 'Maximum duration of the application (in seconds).'
                type: integer
                required: false
            shutdown_in_node_failure:
                description: 'Stop the whole execution in case of Node Failure.'
                type: boolean
                required: false
            qos:
                description: 'Quality of Service to pass to the queue system'
                type: string
                required: false

    # DATA MANAGEMENT

    croupier.datatypes.Credentials:
        properties:
            host:
                description: 'Host for which the credentials are for'
                type: string
                required: false
                default: ''
            user:
                description: 'Account username'
                type: string
                required: false
                default: ''
            password:
                description: 'Account password'
                type: string
                required: false
                default: ''
            auth-header:
                type: string
                required: false
                default: ''
                description: 'Auth header for http calls, for example API tokens'
            auth-header-label:
                type: string
                required: false
                default: 'Authorization'
                description: 'Label to use for authenticating calls to the API'
            private_key:
                description: 'User private key'
                type: string
                required: false
                default: ''
            private_key_password:
                description: 'Password for User private key'
                type: string
                required: false
                default: ''
            ssh_port:
                type: integer
                required: false
                default: 22
            ssh_tunnel:
                type: string
                required: false
                default: ''
            ssh_login_shell:
                type: string
                required: false
                default: ''


    croupier.datatypes.dm.GridFTPCredentials:
        derived_from: croupier.datatypes.Credentials
        properties:
            cert:
                description: "GridFTP user's certificate"
                type: string
                required: false
                default: ''
            cert_password:
                description: "Password for GripFTP user's certificate"
                type: string
                required: false
                default: ''

    croupier.datatypes.dm.HPCWorkspace:
        properties:
            name:
                description: 'workspace name'
                type: string
                required: true
            create:
                description: 'whether or not to create a workspace in the HPC where to copy data'
                type: boolean
                required: false
                default: false
            lifetime:
                description: 'defines the number of days between the creation of the workspace until its automatic deletion.'
                type: integer
                required: false
                default: 1

    croupier.datatypes.ckan_dataset:
        properties:
            name:
                type: string
                required: false
                default: ""
            package_id:
                type: string
                required: false
                default: ""
            title:
                type: string
                required: false
                default: ""
            private:
                type: boolean
                required: false
                default: true
            author:
                type: string
                required: false
                default: ""
            author_email:
                type: string
                required: false
                default: ""
            maintainer:
                type: string
                required: false
                default: ""
            maintainer_email:
                type: string
                required: false
                default: ""
            license_id:
                type: string
                required: false
                default: ""
            notes:
                type: string
                required: false
                default: ""
            version:
                type: string
                required: false
                default: ""
            tags:
                type: list
                required: false
                default: []
            owner_org:
                type: string
                required: false
                default: ""

    croupier.datatypes.ckan_resource:
        properties:
            name:
                type: string
                required: false
                default: ""
            url:
                type: string
                required: false
                default: ""
            description:
                type: string
                required: false
                default: ""
            type:
                type: string
                required: false
                default: ""
            format:
                type: string
                required: false
                default: ""

workflows:
    run_jobs:
        mapping: croupier.croupier_plugin.workflows.run_jobs
    croupier_install:
        mapping: croupier.croupier_plugin.workflows.croupier_install
    croupier_configure:
        mapping: croupier.croupier_plugin.workflows.croupier_configure

node_types:
    croupier.nodes.InfrastructureInterface:
        derived_from: cloudify.nodes.Compute
        properties:
            config:
                description: type
                type: croupier.datatypes.wm_config
            credentials:
                description: SSH configuration
                type: croupier.datatypes.Credentials
                default: {}
            job_prefix:
                description: Job name prefix for this HPC
                default: "croupier"
                type: string
            base_dir:
                description: Root directory of all executions
                default: "$HOME"
                type: string
            workdir_prefix:
                description: Prefix of the working directory instead of blueprint name
                default: ""
                type: string
            monitoring_options:
                description: Monitoring options
                default: {}
                type: croupier.datatypes.monitoring_options
            accounting_options:
                description: Accounting options
                default: {}
                type: croupier.datatypes.accounting_options
            simulate:
                description: Set to true to simulate job without sending it
                type: boolean
                default: False
            skip_cleanup:
                description: True to not clean all files at deployment removal
                type: boolean
                default: False
            recurring_workflow:
                description: True if the workflow is scheduled to run recurrently
                type : boolean
                default: False
                required: False
            internet_access:
                description: True if HPC has access to the internet
                type: boolean
                default: False
                required: False
            supported_prtocols:
                type: list
                default: []
                description: List of protocols supported for data management
            agent_config:
                default:
                    install_method: none
        interfaces:
            cloudify.interfaces.lifecycle:
                configure:
                    implementation: croupier.croupier_plugin.tasks.configure_execution
                    inputs:
                        config:
                            default: { get_property: [SELF, config] }
                        credentials:
                            default: { get_property: [SELF, credentials] }
                        base_dir:
                            default: { get_property: [SELF, base_dir] }
                        workdir_prefix:
                            default: { get_property: [SELF, workdir_prefix] }
                        monitoring_options:
                            default: { get_property: [SELF, monitoring_options] }
                        accounting_options:
                            default: { get_property: [SELF, accounting_options] }
                        recurring_workflow:
                            default: { get_property: [SELF, recurring_workflow] }
                        simulate:
                            default: { get_property: [SELF, simulate] }
                delete:
                    implementation: croupier.croupier_plugin.tasks.cleanup_execution
                    inputs:
                        config:
                            default: { get_property: [SELF, config] }
                        credentials:
                            default: { get_property: [SELF, credentials] }
                        skip:
                            default: { get_property: [SELF, skip_cleanup] }
                        simulate:
                            default: { get_property: [SELF, simulate] }
            cloudify.interfaces.monitoring:
                start:
                    implementation: croupier.croupier_plugin.tasks.start_monitoring_hpc
                    inputs:
                        config_infra:
                            default: { get_property: [SELF, config] }
                        credentials:
                            default: { get_property: [SELF, credentials] }
                        monitoring_options:
                            default: { get_property: [SELF, monitoring_options]}
                        simulate:
                            default: { get_property: [SELF, simulate] }
                stop:
                    implementation: croupier.croupier_plugin.tasks.stop_monitoring_hpc
                    inputs:
                        credentials:
                            default: { get_property: [SELF, credentials] }
                        simulate:
                            default: { get_property: [SELF, simulate] }

    croupier.nodes.Job:
        derived_from: cloudify.nodes.Root
        properties:
            deployment:
                description: Deployment script and inputs
                default: {}
                type: croupier.datatypes.job_deployment_config
            job_options:
                description: Job main command and options
                type: croupier.datatypes.job.Options
            publish:
                description: Config to publish its outputs
                default: []
            skip_cleanup:
                description: True to not clean after execution (debug purposes)
                type: boolean
                default: False
        interfaces:
            cloudify.interfaces.lifecycle:
                configure:
                    implementation: croupier.croupier_plugin.tasks.configure_job
                    inputs:
                        deployment:
                            description: Deployment scripts and inputs
                            default: { get_property: [SELF, deployment] }
                        skip_cleanup:
                            default: { get_property: [SELF, skip_cleanup] }
                        job_options:
                            default: { get_property: [SELF, job_options] }
                    max_retries: 0
                stop:
                    implementation: croupier.croupier_plugin.tasks.revert_job
                    inputs:
                        deployment:
                            description: Undeployment script and inputs
                            default: { get_property: [SELF, deployment] }
                        skip_cleanup:
                            default: { get_property: [SELF, skip_cleanup] }
            croupier.interfaces.lifecycle:
                queue:
                    implementation: croupier.croupier_plugin.tasks.send_job
                    inputs:
                        job_options:
                            default: { get_property: [SELF, job_options] }
                    max_retries: 0
                publish:
                    implementation: croupier.croupier_plugin.tasks.publish
                    inputs:
                        publish_list:
                            default: { get_property: [SELF, publish] }
                cleanup:
                    implementation: croupier.croupier_plugin.tasks.cleanup_job
                    inputs:
                        job_options:
                            default: { get_property: [SELF, job_options] }
                        skip:
                            default: { get_property: [SELF, skip_cleanup] }
                cancel:
                    implementation: croupier.croupier_plugin.tasks.stop_job
                    inputs:
                        job_options:
                            default: { get_property: [ SELF, job_options ] }
                delete_reservation:
                    implementation: croupier.croupier_plugin.tasks.delete_reservation

    croupier.nodes.PyCOMPSsJob:
        derived_from: croupier.nodes.Job
        properties:
            job_options:
                description: PyCOMPSs job command options
                type: croupier.datatypes.pycompssjob.Options

    croupier.nodes.SingularityJob:
        derived_from: croupier.nodes.Job

# DATA MANAGEMENT
    croupier.nodes.DataAccessInfrastructure:
        derived_from: cloudify.nodes.Root
        properties:
            endpoint:
                description: 'accessible (via protocol) endpoint of infrastructure'
                type: string
            supported_protocols:
                description: 'list of supported interfaces to access the data'
                type: list
            credentials:
                description: 'Credentials to access the data access infrastructure'
                type: croupier.datatypes.Credentials
                required: false
            internet_access:
                description: 'Whether of not this DM infrastructure has external access to Internet'
                type: boolean
                required: false
                default: false

    croupier.nodes.GridFTPDataAccessInfrastructure:
        derived_from: croupier.nodes.DataAccessInfrastructure
        properties:
            workspace_basepath:
                description: 'basepath location for workspace creating'
                type: string
                required: false
            ssh_endpoint:
                description: 'ssh endpoint for workspace management'
                type: string
                required: false
            credentials:
                description: 'Credentials to access the data access infrastructure'
                type: croupier.datatypes.dm.GridFTPCredentials
                required: false

    croupier.nodes.CKAN_dataset:
        derived_from: croupier.nodes.DataAccessInfrastructure
        properties:
            dataset_info:
                type: croupier.datatypes.ckan_dataset
                required: true
            supported_protocols:
                default:
                    - CKANAPI

    croupier.nodes.DataTransfer:
        derived_from: cloudify.nodes.Root
        properties:
            transfer_protocol:
                description: 'protocol to transfer data from source to target'
                type: string
        interfaces:
            cloudify.interfaces.lifecycle:
                configure:
                    implementation: croupier.croupier_plugin.tasks.configure_data_transfer

    croupier.nodes.DataSource:
        derived_from: cloudify.nodes.Root

    croupier.nodes.FileDataSource:
        derived_from: croupier.nodes.DataSource
        properties:
            filepath:
                description: 'location of data source in filesystem'
                type: string

    croupier.nodes.WebDataSource:
        derived_from: croupier.nodes.DataSource
        properties:
            resource:
                description: 'URI of data source in Web'
                type: string

    croupier.nodes.CKAN_resource:
        derived_from: croupier.nodes.DataSource
        properties:
            resource:
                type: croupier.datatypes.ckan_resource
                required: true

    croupier.nodes.ECMWFVerticalInterpolation:
        derived_from: croupier.nodes.WebDataSource
        properties:
            credentials:
                description: SSH credentials for the ECMWF VM. Fields- host, user, private_key
                type: croupier.datatypes.Credentials
            keycloak_credentials:
                description: login credentials for hidalgo keycloak. Fields- user, pw
                type: croupier.datatypes.Credentials
            query:
                description: ECMWF Query fields.
                type: croupier.datatypes.ecmwf_query
            server_port:
                type: string
                default: 9984
            cloudify_address:
                type: string
                default: ''
                required: False
            resource:
                required: false
                default: ''
        interfaces:
            cloudify.interfaces.lifecycle:
                configure:
                    implementation: croupier.croupier_plugin.tasks.ecmwf_vertical_interpolation
                    max_retries: 0
                    inputs:
                        query:
                            default: { get_property: [ SELF, query ] }
                        credentials:
                            default: { get_property: [ SELF, credentials ] }
                        keycloak_credentials:
                            default: { get_property: [ SELF, keycloak_credentials ] }
                        cloudify_address:
                            default: { get_property: [ SELF, cloudify_address ] }
                        server_port:
                            default: { get_property: [ SELF, server_port ] }



    croupier.nodes.HPCDataSource:
        derived_from: croupier.nodes.FileDataSource
        properties:
            workspace:
                description: 'Workspace where FileDataSource is located'
                type: croupier.datatypes.dm.HPCWorkspace
                required: false

#VAULT
    croupier.nodes.Vault:
        derived_from: cloudify.nodes.Root
        properties:
            jwt:
                type: string
                required: true
            user:
                type: string
                required: false
                default: ''
            address:
                type: string
                required: false
                default: ''
            cubbyhole:
                type: boolean
                required: false
                default: false
        interfaces:
            cloudify.interfaces.lifecycle:
                create:
                    implementation: croupier.croupier_plugin.tasks.create_vault
                    inputs:
                        jwt:
                            default: { get_property: [ SELF,jwt ] }
                        address:
                            default: { get_property: [ SELF,address ] }

    croupier.nodes.HPCExporter:
        derived_from: cloudify.nodes.Root
        properties:
            hpc_exporter_address:
                type: string
                required: false
                default: ''
            grafana_registry_address:
                type: string
                required: false
                default: ''
        interfaces:
            cloudify.interfaces.lifecycle:
                create:
                    implementation: croupier.croupier_plugin.tasks.create_monitor
                    inputs:
                        hpc_exporter_address:
                            default: { get_property: [SELF,hpc_exporter_address] }
                        grafana_registry_address:
                            default: { get_property: [ SELF,grafana_registry_address ] }

relationships:
    interface_contained_in:
        derived_from: cloudify.relationships.contained_in
        source_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                preconfigure:
                    implementation: croupier.croupier_plugin.tasks.preconfigure_interface
                    inputs:
                        credentials:
                            default: { get_property: [SOURCE, credentials] }
                        simulate:
                            default: { get_property: [SOURCE, simulate] }

    interface_monitored_by:
        derived_from: cloudify.relationships.depends_on
        source_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                preconfigure:
                    implementation: croupier.croupier_plugin.tasks.preconfigure_interface_monitor

    task_managed_by_interface:
        derived_from: cloudify.relationships.contained_in
        source_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                preconfigure:
                    implementation: croupier.croupier_plugin.tasks.preconfigure_task
                    inputs:
                        config:
                            default: { get_property: [TARGET, config] }
                        credentials:
                            default: { get_property: [TARGET, credentials] }
                        job_prefix:
                            default: { get_property: [TARGET, job_prefix] }
                        monitoring_options:
                            default: { get_property: [TARGET, monitoring_options] }
                        simulate:
                            default: { get_property: [TARGET, simulate] }

    ds_located_at:
        derived_from: cloudify.relationships.contained_in
        source_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                preconfigure:
                    implementation: croupier.croupier_plugin.tasks.configure_data_source


    job_depends_on:
        derived_from: cloudify.relationships.depends_on

    from_source:
        derived_from: cloudify.relationships.connected_to
        source_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                postconfigure:
                    implementation: croupier.croupier_plugin.tasks.configure_dt_ds_relationship

    to_target:
        derived_from: cloudify.relationships.connected_to
        source_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                postconfigure:
                    implementation: croupier.croupier_plugin.tasks.configure_dt_ds_relationship


    input:
        derived_from: cloudify.relationships.connected_to

    output:
        derived_from: cloudify.relationships.connected_to

    retrieve_credentials_from_vault:
        derived_from: cloudify.relationships.depends_on
        source_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                preconfigure:
                    implementation: croupier.croupier_plugin.tasks.download_vault_credentials
                    inputs:
                        jwt:
                            default: { get_property: [TARGET, jwt  ] }
                        user:
                            default: { get_property: [TARGET, user   ] }
                        cubbyhole:
                            default: { get_property: [TARGET, cubbyhole ] }

    deployment_source:
        derived_from: cloudify.relationships.connected_to